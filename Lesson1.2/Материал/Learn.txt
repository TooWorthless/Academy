‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
üß© –ù–∞–≤—á–∏—Ç–∏—Å—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏:

üìå Variables
 - var, let, const
 - data types

üìå Operators
 - +, -, *, /, %, ++, --
 - ^, ~
 - &&, ||, ? :, ?, ??, ! 
 - ===, !===
 - >, >=, <, <=
 - spred, rest

üìå Conditions
 - if, else, if else, switch

üìå Loops
 - for, for in, for of
 - while, do while

üìå Errors
 - try, catch, finally
 - throw new Error

üìå Functions
 - default functions, arrow functions
 - typeof
 - instanceof
 - classes, constructors
 - new
 - this
 - prototype
 - apply, bind, call
 - callbacks

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
üß© –†–æ–∑—ñ–±—Ä–∞—Ç–∏—Å—å —è–∫ –ø—Ä—è—Ü—é—î Event Loop, –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ñ—Å—Ç—å/–°–∏–Ω—Ö—Ä–æ–Ω–Ω—ñ—Å—Ç—å

üìå Async Functions
 - setTimeout
 - setInterval
 - setImmediate
 - process.nextTick
 - generators and yield
 - promises

üìå Async Snippet
function async1() {
  console.log('async1 start');
  async2().then(() => {
    console.log('async1 end');
  });
}

function async2() {
  return new Promise((resolve) => {
    resolve();
    console.log('async2');
  })
}

function* generate() {
  console.log('generate-1')
  yield;
  console.log('generate-1.2')
}

function* generate2() {
  console.log('generate-2')
  yield;
  console.log('generate-2.2')
}

console.log('script start');

setTimeout(function () {
  console.log('setTimeout');
}, 0);

const generator1 = generate();
generator1.next();
generator1.next();

async1();

new Promise(function (resolve) {
  console.log('promise1');
  resolve();
}).then(function () {
  console.log('promise2');
});

console.log('script end');
const generator2 = generate2();
generator2.next();
generator2.next();

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
üß© –ó–∞–≤–¥–∞–Ω–Ω—è:
 - –í–∏–≤—á–∏—Ç–∏ –≤—Å—ñ –º–µ—Ç–æ–¥–∏ —Ä–æ–∑–¥—ñ–ª—ñ–≤ Number, String, Math
 - –ó–∞–≤—á–∏—Ç–∏ —è–∫—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –ø—Ä–∏–π–º–∞—î –∫–æ–∂–µ–Ω –º–µ—Ç–æ–¥
 - –ó–¥–æ–±—É—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –∫–æ–∂–µ–Ω –º–µ—Ç–æ–¥ —ñ –¥–ª—è —á–æ–≥–æ, –ø—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
 - –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ –Ω–∞ –ø—Ä–∞–∫—Ç–∏—Ü—ñ –∫–æ–∂–µ–Ω –º–µ—Ç–æ–¥ –∑ —Ä–æ–∑–¥—ñ–ª—ñ–≤ Number / String / Math. 
 - –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–ª–∞–º–∞—Ç–∏ –∫–æ–∂–µ–Ω –º–µ—Ç–æ–¥ –ø–µ—Ä–µ–¥–∞—é—á—ñ —ñ–Ω–≤–∞–ª—ñ–¥–Ω—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ —Ä—ñ–∑–Ω–æ–≥–æ —Ç–∏–ø—É. 20 —Ç–µ—Å—Ç—ñ–≤ –∑ —Ä—ñ–Ω–∏–º–∏ –¥–∞–Ω–Ω–∏–º–∏ –Ω–∞ 1 –º–µ—Ç–æ–¥

1) Number
 - .isFinite
 - .isInteger
 - .isNaN
 - .isSafeInteger
 - Number(str)
 - .parseFloat
 - .parseInt
 - .toExponential
 - .toFixed
 - .toPrecision
 - .toString
 - .valueOf

2) String
 - .at
 - .chartAt
 - .fromCharCode
 - .charCodeAt
 - .concat
 - .endsWith
 - .includes
 - .indexOf
 - .lastIndexOf
 - .match
 - .matchAll
 - .normalize
 - .padEnd
 - .padStart
 - .repeat
 - .replace
 - .replaceAll
 - .search
 - .slice
 - .split
 - .startsWith
 - .substring
 - .toLowerCase
 - .toUpperCase
 - .trim
 - .trimEnd
 - .trimStart

3) Math
 - Math.min
 - Math.max
 - Math.floor
 - Math.ceil
 - Math.round
 - Math.trunc
 - Math.abs
 - Math.random

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
üß© –ó–∞–≤–¥–∞–Ω–Ω—è:
 - –†–æ–∑—ñ–±—Ä–∞—Ç–∏—Å—å –∑ –º–µ—Ç–æ–¥–∞–º–∏ .toString —ñ .valueOf. 
 - –î—ñ–∑–Ω–∞—Ç–∏—Å—å —Ö—Ç–æ —ó—Ö –≤–∏–∫–ª–∏–∫–∞—î, –¥–µ –≤–æ–Ω–∏ –≤–∏–∫–æ—Ä–∏—Å–æ–≤—É—é—Ç—å—Å—è, –∑–∞ —è–∫–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–æ–º –ø—Ä–∞—Ü—é—é—Ç—å, –¥–ª—è —á–æ–≥–æ –≤–æ–Ω–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ
 —Ç–∞ –≤ —è–∫—ñ–π –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ—Å—Ç—ñ –≤–æ–Ω–∏ –≤—ñ–∫–ª–∏–∫–∞—é—Ç—å—Å—è —ñ —è–∫ –∑–º—ñ–Ω–∏—Ç–∏ —ñ—Ö –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å –≤–∏–∫–ª–∏–∫—É

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
