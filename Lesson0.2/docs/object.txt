üìå 1. Object.create(proto, propertiesObject)
// –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–º –∏ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏.

// proto ‚Äî –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞–Ω–µ—Ç –ø—Ä–æ—Ç–æ—Ç–∏–ø–æ–º –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞.
// propertiesObject ‚Äî –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–∞–º–∏ —Å–≤–æ–π—Å—Ç–≤.

const proto = { greet() { console.log("Hello"); } };
const obj = Object.create(proto);
obj.greet(); // "Hello"


üìå 2. Object.assign(target, ...sources)
// –ö–æ–ø–∏—Ä—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–µ—Ä–µ—á–∏—Å–ª—è–µ–º—ã—Ö —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –∏–∑ –æ–¥–Ω–æ–≥–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤ —Ü–µ–ª–µ–≤–æ–π –æ–±—ä–µ–∫—Ç.

// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ü–µ–ª–µ–≤–æ–π –æ–±—ä–µ–∫—Ç.

const target = { a: 1 };
const source = { b: 2, c: 3 };
Object.assign(target, source);
console.log(target); // { a: 1, b: 2, c: 3 }


üìå 3. Object.keys(obj)
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ—á–∏—Å–ª—è–µ–º—ã—Ö –∫–ª—é—á–µ–π –æ–±—ä–µ–∫—Ç–∞.

const obj = { a: 1, b: 2 };
console.log(Object.keys(obj)); // ["a", "b"]


üìå 4. Object.values(obj)
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞.

const obj = { a: 1, b: 2 };
console.log(Object.values(obj)); // [1, 2]


üìå 5. Object.entries(obj)
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –ø–∞—Ä [–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ] –æ–±—ä–µ–∫—Ç–∞.

const obj = { a: 1, b: 2 };
console.log(Object.entries(obj)); // [["a", 1], ["b", 2]]


üìå 6. Object.seal(obj)
// –ó–∞–ø—Ä–µ—â–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞, –Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è.

// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–ø–µ—á–∞—Ç–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç.

const obj = { a: 1 };
Object.seal(obj);
obj.a = 2; // –†–∞–±–æ—Ç–∞–µ—Ç
delete obj.a; // –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–≥–æ–º —Ä–µ–∂–∏–º–µ


üìå 7. Object.isSealed(obj)
// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–±—ä–µ–∫—Ç –∑–∞–ø–µ—á–∞—Ç–∞–Ω–Ω—ã–º.

const obj = Object.seal({ a: 1 });
console.log(Object.isSealed(obj)); // true


üìå 8. Object.freeze(obj)
// –ó–∞–ø—Ä–µ—â–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤ –æ–±—ä–µ–∫—Ç–∞.

// –û–±—ä–µ–∫—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–º.

const obj = Object.freeze({ a: 1 });
obj.a = 2; // –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–≥–æ–º —Ä–µ–∂–∏–º–µ


üìå 9. Object.isFrozen(obj)
// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–±—ä–µ–∫—Ç –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–º.

const obj = Object.freeze({ a: 1 });
console.log(Object.isFrozen(obj)); // true


üìå 10. Object.preventExtensions(obj)
// –ó–∞–ø—Ä–µ—â–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–≤–æ–π—Å—Ç–≤ –≤ –æ–±—ä–µ–∫—Ç.

// –£–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –º–æ–∂–Ω–æ —É–¥–∞–ª—è—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω—è—Ç—å.

const obj = { a: 1 };
Object.preventExtensions(obj);
obj.b = 2; // –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–≥–æ–º —Ä–µ–∂–∏–º–µ


üìå 11. Object.is(obj1, obj2)
// –°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–æ–≥–æ–µ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ.

// –û—Ç–ª–∏—á–∏–µ –æ—Ç ===: –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å NaN –∏ -0/+0.

console.log(Object.is(NaN, NaN)); // true
console.log(Object.is(-0, +0)); // false


12. Object.fromEntries(entries)
// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –º–∞—Å—Å–∏–≤ –ø–∞—Ä [–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ] –≤ –æ–±—ä–µ–∫—Ç.

const entries = [["a", 1], ["b", 2]];
const obj = Object.fromEntries(entries);
console.log(obj); // { a: 1, b: 2 }